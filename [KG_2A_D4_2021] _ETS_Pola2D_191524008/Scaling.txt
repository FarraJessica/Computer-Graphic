#func fullEllips(centerPoint : Vector2, rx, ry, rotating := 0):
#	var ellipseCenter = Vector2(centerPoint.x, centerPoint.y)
#	var x_inc = 0
#	var y_inc = 0
#	for i in range(max(rx,ry)):
#		if i <= rx:
#			x_inc += 1
#		if i <= ry:
#			y_inc += 1
#		ellipseMidpoint(center, x_inc, y_inc, rotating)
#		ellipseMidpoint(centerPoint: Vector2, rx: x_inc, ry: y_inc, kuadran := [1,2,3,4], rotate := 0, centerRadius := Vector2(-1,-1))
#		ellipseMidpoint(ellipseCenter, x_inc, y_inc, [1,2,3,4], 0, centerPoint)

func scaling(sx, sy):
	var isPoint = (attr["parameters_0"].size() >= 4) and (attr["parameters_0"].size() % 2 == 0)
	for i in range(0, attr["parameters_0"].size()):
		if (isPoint):
			if i % 2 == 0:
				attr["parameters_0"][i] = (attr["parameters_0"][i] * sx) + attr["centers"][0] * (1-sx)
			else:
				attr["parameters_0"][i] = (attr["parameters_0"][i] * sy) + attr["centers"][1] * (1-sy)
		else:
			if i % 2 == 0:
				attr["parameters_0"][i] *= sx
			else:
				attr["parameters_0"][i] *= sy
	points.clear()
	if (isPoint):
		attr["function"].call_funcv(attr["parameters_0"]+attr["parameters_1"])
	else:
		attr["function"].call_funcv(attr["parameters_0"]+attr["centers"]+attr["parameters_1"])